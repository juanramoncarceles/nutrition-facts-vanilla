{"version":3,"sources":["src/script.js"],"names":["currentItem","undefined","foodTitle","document","getElementById","foodImage","caloriesBar","caloriesValue","carbsBar","carbsValue","proteinsBar","proteinsValue","fatsBar","fatsValue","fiberBar","fiberValue","caloriesMax","updateValues","foodItem","innerText","dataset","name","foodValues","nutritionFacts","id","style","strokeDasharray","calories","fill","innerHTML","updateBar","barElement","textElement","value","updateTextDelay","opacity","setTimeout","carbohydrate","protein","fat","fiber","foodListInput","foodListItems","filterFood","keyword","string","toLowerCase","i","children","length","includes","display","clearFilter","dispatchEvent","Event","addEventListener","e","target","toggleFoodList","foodList","closeFoodList","active","classList","add","remove","openFoodList","selectFoodItem","item","contains","href","baseVal","src","currentTarget","avocado","banana","broccoli","cowMilk","peanuts"],"mappings":"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","file":"script.0fddc80b.js","sourceRoot":"..","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////// GLOBAL PROPERTIES /////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n// Store a reference to the current food item.\r\nlet currentItem = undefined;\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////// UI STRUCTURE ///////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n// DOM elements reference.\r\nconst foodTitle = document.getElementById('foodTitle');\r\nconst foodImage = document.getElementById('selectedFoodImage');\r\nconst caloriesBar = document.getElementById('caloriesBar');\r\nconst caloriesValue = document.getElementById('caloriesValue');\r\nconst carbsBar = document.getElementById('carbsBar');\r\nconst carbsValue = document.getElementById('carbsValue');\r\nconst proteinsBar = document.getElementById('proteinsBar');\r\nconst proteinsValue = document.getElementById('proteinsValue');\r\nconst fatsBar = document.getElementById('fatsBar');\r\nconst fatsValue = document.getElementById('fatsValue');\r\nconst fiberBar = document.getElementById('fiberBar');\r\nconst fiberValue = document.getElementById('fiberValue');\r\n\r\nconst caloriesMax = 578; // TODO: this shouldnt be hardcoded\r\n\r\n/**\r\n * Updates the UI to show the values of the food item provided.\r\n * @param {HTMLElement} foodItem The image element that represents the item.\r\n */\r\nfunction updateValues(foodItem) {\r\n  // Set food title\r\n  foodTitle.innerText = foodItem.dataset.name;\r\n  // Object with the food item values\r\n  const foodValues = nutritionFacts[foodItem.id]; // eslint-disable-line no-use-before-define\r\n  // Update calories\r\n  caloriesBar.style.strokeDasharray = `${578 * (foodValues.calories / caloriesMax)}px 578px`;\r\n  caloriesValue.style.fill = (foodValues.calories > caloriesMax / 2) ? '#000' : '#fff';\r\n  caloriesValue.innerHTML = `${foodValues.calories} Kcal.`;\r\n\r\n  const updateTextDelay = 500;\r\n\r\n  /**\r\n   * Updates a bar element of the UI.\r\n   * @param {SVGElement} barElement \r\n   * @param {SVGElement} textElement \r\n   * @param {number} value Value should be between 0 and 100.\r\n   * @param {number} updateTextDelay \r\n   */\r\n  function updateBar(barElement, textElement, value, updateTextDelay = 0) {\r\n    barElement.style.strokeDasharray = `${value} 100`;\r\n    textElement.style.opacity = 0;\r\n    setTimeout(() => {\r\n      textElement.innerHTML = `${value}g`;\r\n      textElement.style.opacity = 1;\r\n    }, updateTextDelay);\r\n  }\r\n\r\n  // Update carbs.\r\n  updateBar(carbsBar, carbsValue, foodValues.carbohydrate, updateTextDelay);\r\n  // Update proteins.\r\n  updateBar(proteinsBar, proteinsValue, foodValues.protein, updateTextDelay);\r\n  // Update fats.\r\n  updateBar(fatsBar, fatsValue, foodValues.fat, updateTextDelay);\r\n  // Update fiber.\r\n  updateBar(fiberBar, fiberValue, foodValues.fiber, updateTextDelay);\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n////////////////////////// FILTER FOOD FORM ///////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n// DOM elements reference.\r\nconst foodListInput = document.getElementById('foodListInput');\r\nconst foodListItems = document.getElementById('foodListItems');\r\n\r\n/**\r\n * Hiddes all the foodListItems children that doesn't include the keyword on\r\n * the data-name.\r\n * @param {string} keyword \r\n */\r\nfunction filterFood(keyword) {\r\n  const string = keyword.toLowerCase();\r\n  for (let i = 0; i < foodListItems.children.length; i++) {\r\n    if (!foodListItems.children[i].dataset.name.toLowerCase().includes(string)) {\r\n      foodListItems.children[i].style.display = 'none';\r\n    } else {\r\n      foodListItems.children[i].style.display = 'unset';\r\n    }\r\n  }\r\n}\r\n\r\nfoodListInput.addEventListener('input', (e) => {\r\n  filterFood(e.target.value);\r\n});\r\n\r\n/**\r\n * Clears the filter input.\r\n */\r\nfunction clearFilter() {\r\n  foodListInput.value = '';\r\n  foodListInput.dispatchEvent(new Event('input'));\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////// THE FOOD LIST ///////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n// DOM elements reference.\r\nconst toggleFoodList = document.getElementById('toggleFoodList');\r\nconst foodList = document.getElementById('foodList');\r\n\r\n/**\r\n * Closes the food list.\r\n */\r\nfunction closeFoodList() {\r\n  foodList.dataset.active = 'false';\r\n  foodList.classList.add('disabled');\r\n  foodList.classList.remove('active');\r\n  foodImage.classList.add('active');\r\n  toggleFoodList.classList.remove('active');\r\n  clearFilter();\r\n}\r\n\r\n/**\r\n * Opens the food list.\r\n */\r\nfunction openFoodList() {\r\n  foodList.dataset.active = 'true';\r\n  foodList.classList.remove('disabled');\r\n  foodList.classList.add('active');\r\n  foodImage.classList.remove('transition', 'active');\r\n  toggleFoodList.classList.add('active');\r\n}\r\n\r\n/**\r\n * If the item is not already seleceted it selects it, closes the food list and updates the UI values.\r\n * @param {HTMLImageElement} item A food item in the list.\r\n */\r\nfunction selectFoodItem(item) {\r\n  if (!item.classList.contains('selected')) {\r\n    if (currentItem) currentItem.classList.remove('selected');\r\n    currentItem = item;\r\n    currentItem.classList.add('selected');\r\n    foodImage.href.baseVal = currentItem.src;\r\n    foodImage.classList.add('transition');\r\n    closeFoodList();\r\n    updateValues(currentItem);\r\n  }\r\n}\r\n\r\n// Food items click handler.\r\nfor (let i = 0; i < foodListItems.children.length; i++) {\r\n  foodListItems.children[i].addEventListener('click', e => selectFoodItem(e.currentTarget));\r\n}\r\n\r\n// Food list toggle handler.\r\ntoggleFoodList.addEventListener('click', () => {\r\n  if (foodList.dataset.active === 'false')\r\n    openFoodList();\r\n  else\r\n    closeFoodList();\r\n});\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////// FOOD DATA ////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n// Names should match with the ids of the food items.\r\nconst nutritionFacts = {\r\n  avocado: {\r\n    calories: 223,\r\n    carbohydrate: 2,\r\n    protein: 4,\r\n    fat: 22,\r\n    fiber: 3\r\n  },\r\n  banana: {\r\n    calories: 121,\r\n    carbohydrate: 31.8,\r\n    protein: 1.3,\r\n    fat: 0.37,\r\n    fiber: 2.3\r\n  },\r\n  broccoli: {\r\n    calories: 23,\r\n    carbohydrate: 2,\r\n    protein: 3,\r\n    fat: 0,\r\n    fiber: 4\r\n  },\r\n  cowMilk: {\r\n    calories: 60,\r\n    carbohydrate: 5,\r\n    protein: 3,\r\n    fat: 3,\r\n    fiber: 0\r\n  },\r\n  peanuts: {\r\n    calories: 570,\r\n    carbohydrate: 9,\r\n    protein: 24,\r\n    fat: 49,\r\n    fiber: 8\r\n  }\r\n};\r\n\r\n// TODO\r\n//   almond\r\n//   squid\r\n//   onion\r\n//   bread\r\n//   mushroom\r\n//   spinach\r\n//   chickpea\r\n//   beans\r\n//   egg\r\n//   butter\r\n//   salmon\r\n//   honey\r\n//   walnut\r\n//   cow steak\r\n//   chicken"]}